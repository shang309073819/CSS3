div>p: 子代
div+p： div后面相邻的第一个p
div~p: div后面所有的兄弟p

属性选择器：
    E[title] : 选中页面的E元素，并且E需要带有title属性
    E[title="abc"] :选中页面的E元素，并且E需要带有title属性,属性值为abc
    E[title^="abc"] :选中页面的E元素，并且E需要带有title属性,属性值以abc开头
    E[title$="abc"] :选中页面的E元素，并且E需要带有title属性,属性值以abc结尾
    E[title*="abc"] :选中页面的E元素，并且E需要带有title属性,属性值包含abc

结构伪类选择器：
    E：first-child　选中父元素中的第一个子元素
    E：last-child　选中父元素中的最后一个子元素
    E：nth-child(1)　选中父元素中的第5个子元素
        n: 0,1,2,3,4......
        偶数： 2n  even
        奇数：2n-1 odd
        前5个： -n+5
    E：nth-last-child(3): 从后向前选择， 选中倒数第3个
    E：empty 表示元素为空的状态
    E:target: 表示元素被激活的状态  要配合锚点使用
        <a href="#1234">链接</a>
        <h2 id="1234">标题</h2>
        //点击链接，标题变红
        h2:target {
            color: red;
        }
伪元素：
    ":" 与 "::" 区别在于区分伪类和伪元素
    E::before
    E::after  必须有content 属性

伪元素选择器：
    E::first-letter　选中第一个字母
    E::first-line选中第一行
    E::selection: 表示选择的区域 通过设置 color  background

CSS3中新增了两种颜色模式：
    RGBA: red  green blue (0-255)   alpha: 透明度 （0-1）
    HSLA:
        H:色调  0-360
        S:饱和度 0%-100%
        L:亮度    0%-100%
        A：alpha 透明度 0-1

text-shadow: 可分别设置偏移量、模糊度、颜色（可设透明度）。
    1、水平偏移量 正值向右 负值向左；
    2、垂直偏移量 正值向下 负值向上；
    3、模糊度是不能为负值；

box-sizing: border-box
    实际宽度 = width -> 即使定义了border\padding也不会改变对象的实际宽度
box-sizing: content-box
    实际宽度 = width + border + padding

浏览器支持程度差、需要添加私有化前缀
    -webkit-: 谷歌 苹果
    -moz-:火狐
    -ms-：ie
    -o-：Opera

边框圆角：
    border-radius:30px;
    border-radius:30px 40px 50px 60px;
      赋值规律： 从左上开始，顺时针赋值，如果这个角没有值 ，去对角；
    border-radius: 40px/60px;
    圆角处理时，脑中要形成圆、圆心、横轴、纵轴的概念，正圆是椭圆的一种特殊情况。
    可分别设置长、短半径，以“/”进行分隔，遵循“1，2，3，4”规则，“/”前面的1~4个用来设置横轴半径（分别对应横轴1、2、3、4位置 ），“/”后面1~4个参数用来设置纵轴半径（分别对应纵轴1、2、3、4位置 ）

边框阴影：
    box-shadow: 水平位移  垂直位移  模糊程度  阴影大小  阴影颜色  外/内阴影(inset)

边框图片：
    border-image-source: 图片路径
    border-image-slice: 裁剪
    border-image-width: 边框宽度
    border-image-repeat: 边框图片的平铺
      repeat:  图片显示不完整
      round: 图片平铺 优化了，图片会完整显示
      stretch: 拉伸

背景：
    背景可以改变大小，可以有多个背景
    background-size:  30px 30px;
    background-size:  30% 30%;
    background-size:  cover; 覆盖
    background-size:  contain; 包含

    可以有多个背景:
      多个背景按照正常的语法格式书写，每个背景使用逗号隔开

背景原点：
    background-origin:
       content-box
       padding-box
       border-box

背景裁剪
    background-clip:
       content-box
       padding-box
       border-box

渐变
    线性渐变：
      background-image: linear-gradient(方向，起始颜色，终止颜色);
      方向：to left right bottom top   35deg
    径向渐变：

3d变换
    rotateX(30deg) 绕着x旋转30deg
    rotateY(30deg) 绕着y旋转30deg
    rotateZ(30deg) 绕着z旋转30deg
    translateX(30px) 沿着x轴移动30px
    translatey(30px) 沿着y轴移动30px
    translatez(30px) 沿着Z轴移动30px( 必须给父盒子加透视)

透视：
    加给变换元素的父盒子， 设置的是用户眼睛和屏幕的距离；
    只是视觉上的呈现，不是正真的3d
    perspective:1000px;

transform-style:preserve-3d;
    加给变换元素的父盒子，让子盒子存在三维空间中，保持3d效果
    flat:默认值 （让子盒子被扁平化）

backface-visibility:hidden; 背面不可见
    skew(30deg,30deg);  2d变换 -倾斜
    css3中获取自定义属性的值：content:attr(data-text);

动画：
  定义：
    @keyframes 动画名{
        0%{

        }

        100%{

        }

        或者
        from{}
        to{}
    }

动画调用：
    animation: 动画名称 动画时间  执行次数  运动曲线 延迟执行 结束后状态 是否反向；
        inifnite: 无限次
        alternate: 反向执行
        forwards: 保持结束后的状态
        backwards: 保持动起开始前的状态
        steps(5): 让动画分步执行；
        动画详细属性：
            animation-name:动画名称
            animation-duration:持续时间
            animation-iteration-count:执行次数
            animation-timing-function:运动曲线
            animation-fill-mode:结束状态
            animation-direction: 动画方向
            animation-delay: 延迟时间
        多列：（了解）
            -webkit-column-count:列数
            -webkit-column-rule:分割线样式
            -webkit-column-width:列宽
            -webkit-column-gap:列间距
            -webkit-column-span:跨列 all 跨所有列


伸缩布局：
    display:flex;

    主轴 ，侧轴（垂直于主轴的方向）

    主轴方向：flex-direction:
        row  row-reverse
        column column-reverse

    主轴方向上的对齐方式：justify-content
        flex-start: 主轴开始
        flex-end: 主轴结束
        center: 居中
        space-around:平分
        sapce-between：两端对齐 中间平均


    侧轴对齐方式：
          flex-start: 侧轴开始
          flex-end: 侧轴结束
          center: 居中
          baseline:基线对齐
          streth:拉伸

    子盒子伸缩比例：
        flex: 1;
        如果某盒子不参与划分比里， 不写flex属性即可


    2、图标字体
        优点：
        1、将所有图标打包成字体库，减少请求；
        2、具有矢量性，可保证清晰度；
        3、使用灵活，便于维护；

        使用步骤：
               1、引入字体包
               2、申明字体：告诉浏览器去哪找字体
               3、定义类名
               4、在结构中写 图标的编码，给标签添加类名


         伪元素中：
            &#xe628;  ----> content:"\e628";

        3-360全屏滚动案例

        鼠标滚轮事件：
            onmousewheel=function(){}




